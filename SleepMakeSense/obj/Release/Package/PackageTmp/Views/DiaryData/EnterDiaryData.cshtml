@using SleepMakeSense.Models

@model DiaryDataViewClass


<!DOCTYPE html>
@using (Html.BeginForm("EnterDiaryData", "DiaryData", FormMethod.Post))
{

    <html lang="en">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>Factor List</title>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js" charset="utf-8"></script>
    </head>


    <body onload="UserdatasController.html()">
        <div id="DataProcessing">
            <script type="text/javascript">


            </script>
        </div>
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h2>Sleep Diary</h2>
                    <p>Please answer these questions to learn how various lifestyle factors are affecting your sleep.</p>
                    <hr />
                </div>
            </div>

            <table class="table">

                <tr class="tr-noborder" style="@((bool)Model.UserQuestion.WakeUpFreshness ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-child fa-2x"></i><span>Wake Up Freshness</span></td>
                    <td class="diaryquestion"> How fresh did you feel from last night's sleep? (1 not at all - 5 very)</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.WakeUpFreshness, Model.QUESTIONSELECTION.ToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>
                <tr style="@((bool)Model.UserQuestion.Dream? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-cloud fa-2x"></i><span>Dream</span></td>
                    <td class="diaryquestion"> How well did you remember your dream? (1 not at all - 5 very)</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.Dream, Model.QUESTIONSELECTION.ToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>

                <tr class="tr-noborder" style="@((bool)Model.UserQuestion.Stress ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-frown-o fa-2x"></i><span>Stress</span></td>
                    <td class="diaryquestion"> How anxious/stressed were you yesterday? (1 not at all - 5 very)</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.Stress, Model.QUESTIONSELECTION.ToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>
                <tr class="tr-noborder" style="@((bool)Model.UserQuestion.Tiredness ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-child fa-2x"></i><span>Tired</span></td>
                    <td class="diaryquestion"> How tired/sleepy were you yesterday? (1 not at all - 5 very)</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.Tiredness, Model.QUESTIONSELECTION.ToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>
                <tr style="@((bool)Model.UserQuestion.Mood ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-child fa-2x"></i><span>Mood</span></td>
                    <td class="diaryquestion"> How was your mood before bed? (1 very bad - 5 very good)</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.Mood, Model.QUESTIONSELECTION.ToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>

                <tr style="@((bool)Model.UserQuestion.SchoolQuestions ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-graduation-cap fa-2x"></i><span>School</span></td>
                    <td class="diaryquestion"> How anxious/stressed were you in regards to school exams and assignments yesterday? (1 not at all - 5 very)</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.SchoolStress, Model.QUESTIONSELECTION.ToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>

                <tr class="tr-noborder" style="@((bool)Model.UserQuestion.CoffeeQuestions ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-coffee fa-2x"></i><span>Caffeine</span></td>
                    <td class="diaryquestion">How many caffeinated beverages did you drink yesterday?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.CoffeeAmt, Model.QUESTIONSELECTION.ToTen(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>
                <tr style="@((bool)Model.UserQuestion.CoffeeQuestions ? "display:" : "display:none")">
                    <td class="diaryfactor"><!--i class="fa fa-coffee fa-2x"></i><span>Caffeine</span--></td>
                    <td class="diaryquestion">When was the time you had the last caffeinated beverage yesterday? </td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.CoffeeTime, Model.QUESTIONSELECTION.AllHours(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>

                <tr class="tr-noborder" style="@((bool)Model.UserQuestion.AlcoholQuestions ? "display:" : "display:none")">
                    <!--td class="diaryfactor"><i class="fa fa-glass fa-2x"></i><span>Alcohol Amount</span></td-->
                    <td class="diaryfactor"><i class="fa fa-glass fa-2x"></i><span>Alcohol</span></td>
                    <td class="diaryquestion">How many alcoholic beverages did you drink yesterday?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.AlcoholAmt, Model.QUESTIONSELECTION.ToTen(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>
                <tr style="@((bool)Model.UserQuestion.AlcoholQuestions ? "display:" : "display:none")">
                    <td class="diaryfactor"><!--i class="fa fa-glass fa-2x"></i><span>Alcohol Time</span--></td>
                    <td class="diaryquestion">When was the time you had the last alcoholic beverage yesterday?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.AlcoholTime, Model.QUESTIONSELECTION.AllHours(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>

                <tr class="tr-noborder" style="@((bool)Model.UserQuestion.ExersiseQuestions ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-futbol-o fa-2x"></i><span>Exercise</span></td>
                    <td class="diaryquestion">How intense was your workout (1 sweat-free light workout, 5 intense workout that causes severe muscle pain)</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.ExerciseIntensity, Model.QUESTIONSELECTION.ToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>
                <tr style="@((bool)Model.UserQuestion.ExersiseQuestions ? "display:" : "display:none")">
                    <td class="diaryfactor"><!--i class="fa fa-futbol-o fa-2x"></i><span>Exercise</span--></td>
                    <td class="diaryquestion">How long was your workout today?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.ExerciseDuration, Model.QUESTIONSELECTION.TimeToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>

                <tr class="tr-noborder" style="@((bool)Model.UserQuestion.FoodQuestions ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-cutlery fa-2x"></i><span>Dinner</span></td>
                    <td class="diaryquestion">What was your dinner last night?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.DinnerTime, Model.QUESTIONSELECTION.NightHours(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>
                <tr style="@((bool)Model.UserQuestion.FoodQuestions ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-cutlery fa-2x"></i><span>Snacking</span></td>
                    <td class="diaryquestion">What time did you snack last night?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.SnackTime, Model.QUESTIONSELECTION.NightHours(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>

                <tr class="tr-noborder" style="@((bool)Model.UserQuestion.NapQuestions ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-bed fa-2x"></i><span>Naps</span></td>
                    <td class="diaryquestion">How long did you nap yesterday?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.NapDuration, Model.QUESTIONSELECTION.TimeToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>
                <tr style="@((bool)Model.UserQuestion.NapQuestions ? "display:" : "display:none")">
                    <td class="diaryfactor"><!--i class="fa fa-bed fa-2x"></i><span>Naps</span--></td>
                    <td class="diaryquestion">What Time was your nap yesterday?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.NapTime, Model.QUESTIONSELECTION.DayHours(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>

                <tr class="tr-noborder" style="@((bool)Model.UserQuestion.WorkQuestions ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-briefcase fa-2x"></i><span>Work</span></td>
                    <td class="diaryquestion">When did you start work yesterday?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.WorkTime, Model.QUESTIONSELECTION.AllHours(), "Please Select", new { @class = "form-control" })

                    </td>
                </tr>
                <tr style="@((bool)Model.UserQuestion.WorkQuestions ? "display:" : "display:none")">
                    <td class="diaryfactor"><!--i class="fa fa-briefcase fa-2x"></i><span>Work</span--></td>
                    <td class="diaryquestion">How long were you at work yesterday?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.WorkDuration, Model.QUESTIONSELECTION.TimeToTen(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>

                <!--Added questions on how much time spent with family and friends before bed time-->
                <tr class="tr-noborder" style="@((bool)Model.UserQuestion.SocialActivityDurationQuestion ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-mobile fa-2x"></i><span>Social activity</span></td>
                    <td class="diaryquestion">How long did you spend with your family or friends after 6pm last night?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.SocialFamily, Model.QUESTIONSELECTION.TimeToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>
                <tr style="@((bool)Model.UserQuestion.SocialActivityDurationQuestion ? "display:" : "display:none")">
                    <td class="diaryfactor"><!--i class="fa fa-commenting fa-2x"></!--i><span>Social activity</span--></td>
                    <td class="diaryquestion">How much time did you spend with your friends after 6pm last night?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.SocialFriend, Model.QUESTIONSELECTION.TimeToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>


                <tr  class="tr-noborder" style="@((bool)Model.UserQuestion.DigDeviceDurationQuestion ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-mobile fa-2x"></i><span>Mobile use</span></td>
                    <td class="diaryquestion">How long did you spend on your phone/tablet for after 6pm last night?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.DigDeviceDuration, Model.QUESTIONSELECTION.TimeToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>
                <tr  class="tr-noborder" style="@((bool)Model.UserQuestion.SocialMediaDurationQuestion ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-commenting fa-2x"></i><span>Social media</span></td>
                    <td class="diaryquestion">How long did you spend on social media for after 6pm last night?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.SocialMedia, Model.QUESTIONSELECTION.TimeToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>
                <tr  class="tr-noborder" style="@((bool)Model.UserQuestion.MusicDurationQuestion ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-music fa-2x"></i><span>Music</span></td>
                    <td class="diaryquestion">How long did you spend listening to music after 6pm last night?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.MusicDuration, Model.QUESTIONSELECTION.TimeToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>
                <tr  class="tr-noborder" style="@((bool)Model.UserQuestion.TVDurationQuestion ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-tv fa-2x"></i><span>TV</span></td>
                    <td class="diaryquestion">How long did you watching TV after 6pm last night?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.MusicDuration, Model.QUESTIONSELECTION.TimeToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>
                <tr style="@((bool)Model.UserQuestion.GameDurationQuestion ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-gamepad fa-2x"></i><span>Video games</span></td>
                    <td class="diaryquestion">How long did you spend on video games for after 6pm last night?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.GamesDuration, Model.QUESTIONSELECTION.TimeToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>

                <tr class="tr-noborder" style="@((bool)Model.UserQuestion.TempQuestion ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-themeisle fa-2x"></i><span>Temperature</span></td>
                    <td class="diaryquestion">How warm or cold was your room when you fell asleep?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.AmbientTemp, Model.QUESTIONSELECTION.Temperature(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>

                <tr class="tr-noborder" style="@((bool)Model.UserQuestion.LightQuestion ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-lightbulb-o fa-2x"></i><span>Light</span></td>
                    <td class="diaryquestion">How much light was visible in your room before falling asleep? (1 not light at all - 5 very bright)</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.Light, Model.QUESTIONSELECTION.ToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>

                <tr class="tr-noborder" style="@((bool)Model.UserQuestion.NoiseQuestion ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-soundcloud fa-2x"></i><span>Noise</span></td>
                    <td class="diaryquestion">How much noise was present before falling asleep? (1 no noise at all - 5 very noisy)?</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.Noise, Model.QUESTIONSELECTION.ToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>

                <tr class="tr-noborder" style="@((bool)Model.UserQuestion.CleanlinessQuestion ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-clipboard fa-2x"></i><span>Cleanliness</span></td>
                    <td class="diaryquestion">Last night, how clean was your room? (1 very messy - 5 very clean)</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.Cleanliness, Model.QUESTIONSELECTION.ToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>

                <tr class="tr-noborder" style="@((bool)Model.UserQuestion.MedicationQuestion ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-drupal fa-2x"></i><span>Medication</span></td>
                    <td class="diaryquestion">Did you take your medication today? </td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.Medication, Model.QUESTIONSELECTION.Medication(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>

                <tr class="tr-noborder" style="@((bool)Model.UserQuestion.PerFactor1Question ? "display:" : "display:none")">
                    <td class="diaryfactor"><i class="fa fa-hand-peace-o fa-2x"></i><span>Personal Factor</span></td>
                    <td class="diaryquestion">How would you rate your personal factor? (1 not at all – 5 very)</td>
                    <td>
                        @Html.DropDownListFor(model => model.DiaryData.PerFactor1, Model.QUESTIONSELECTION.ToFive(), "Please Select", new { @class = "form-control" })
                    </td>
                </tr>

                <tr class="tr-nobg">
                    <td></td>
                    <td></td>
                    <td><input type="submit" value="Save Todays Diary" class="btn btn-primary btn-lg btn-block" /></td>
                </tr>
            </table>
        </div>
    </body>
</html>
}
